#!/usr/bin/bash

set -e
set -u

name="$1"
tag="$2"
commitish="$3"
commit="$(git rev-parse "$commitish")"
server="$4"
script="./train/$name.py"

./server/check_saved_exists "$name" "$tag"

mkdir -p "saved_logs/$name/$tag"

scp -i "~/.ssh/canada-central.pem" server/server_* "$server":.
ssh -i "~/.ssh/canada-central.pem" "$server" -t "bash -ic \
    '
    screen -S exp-$name-$tag -Q select . ;
    ret_code=\$?;
    echo Code: \$ret_code;
    set -e;
    if [[ \$ret_code -ne 0 ]]; then
        rm -rf exit_code_$name-$tag;
        ls -la; cat server_run;
        echo logfile screenlog_$name-$tag.log > screen_$name-$tag.conf
        screen -c screen_$name-$tag.conf -L -S exp-$name-$tag ./server_run $commit $name $tag;
        cat screenlog_$name-$tag.log;
        exit \$(cat exit_code_$name-$tag);
    else
        exit 23;
    fi;
    '" \
    | tee -a "saved_logs/$name/$tag/$server"
# Status codes:
# 22: KeyboardInterrupt occurred
# 23: Screen session already running
# 24: No session running and saved files exist
script_status=${PIPESTATUS[0]}
echo "SSH shell exit code: $script_status"

if [ "$script_status" == "22" ] || [ "$script_status" == "0" ]; then
    ./server/download_from_server "$name" "$tag" "$server"
elif [ "$script_status" == "23" ]; then
    echo "Session already running."
    read -p "Do you want to continue it? " -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        ./server/continue_on_server "$name" "$tag" "$server"
    fi
elif [ "$script_status" == "24" ]; then
    echo "Session not running and saved files exist on server."
    read -p "Do you want to download them? " -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        ./server/download_from_server "$name" "$tag" "$server"
    fi
fi
